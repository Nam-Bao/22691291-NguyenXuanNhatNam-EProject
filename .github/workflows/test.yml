name: CI
on: [push, pull_request]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      mongodb:
        image: mongo:6
        ports:
          - 27017:27017
        options: >-
          --name mongodb
          --network-alias mongodb
          --health-cmd "mongosh --eval 'db.adminCommand(\"ping\")'"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 10

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Create .env files
        run: |
          echo "MONGODB_AUTH_URI=mongodb://mongodb:27017/test_auth" >> auth/.env
          echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> auth/.env
          echo "MONGODB_PRODUCT_URI=mongodb://mongodb:27017/test_product" >> product/.env
          echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> product/.env
          echo "LOGIN_TEST_USER=${{ secrets.LOGIN_TEST_USER }}" >> product/.env
          echo "LOGIN_TEST_PASSWORD=${{ secrets.LOGIN_TEST_PASSWORD }}" >> product/.env

      - name: Install dependencies
        run: |
          cd auth && npm ci
          cd ../product && npm ci
          cd ..

      - name: Wait for MongoDB to be ready
        run: |
          echo "Waiting for MongoDB to start..."
          for i in {1..10}; do
            if mongosh "mongodb://mongodb:27017/test_auth" --eval "db.runCommand({ ping: 1 })"; then
              echo "✅ MongoDB is ready!"
              break
            fi
            echo "⏳ MongoDB not ready yet, retrying ($i)..."
            sleep 5
          done

      - name: Debug Mongo Connection
        run: mongosh "mongodb://mongodb:27017/test_auth" --eval "db.runCommand({ ping: 1 })"

      - name: Run auth tests
        run: |
          cd auth
          npm test -- --timeout 30000 --exit
