name: CI (Auth & Product)

on: [push, pull_request]

jobs:
  test:
    runs-on: ubuntu-latest

    container:
      image: node:20

    services:
      mongodb:
        image: mongo:7
        options: >-
          --name mongodb_ci 
          --health-cmd "mongosh --eval 'db.adminCommand(\"ping\")'"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      rabbitmq:
        image: rabbitmq:3-management
        options: >-
          --name rabbitmq_ci
          --health-cmd "rabbitmq-diagnostics check_running"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: ⬇️ Checkout code
        uses: actions/checkout@v4
        with:
          path: app
        
      - name: Install wait-for-it.sh
        run: |
          wget https://raw.githubusercontent.com/vishnubob/wait-for-it/master/wait-for-it.sh -O app/wait-for-it.sh
          chmod +x app/wait-for-it.sh

      - name: Create .env files
        run: |
          # Auth Service
          echo "MONGODB_AUTH_URI=mongodb://mongodb:27017/test_auth" >> app/auth/.env
          echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> app/auth/.env
          
          # Product Service
          echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> app/product/.env
          echo "MONGODB_PRODUCT_URI=mongodb://mongodb:27017/test_product" >> app/product/.env
          echo "RABBITMQ_URI=amqp://rabbitmq:5672" >> app/product/.env
          echo "AUTH_URL=http://localhost:3000" >> app/product/.env
          echo "LOGIN_TEST_USER=${{ secrets.LOGIN_TEST_USER }}" >> app/product/.env
          echo "LOGIN_TEST_PASSWORD=${{ secrets.LOGIN_TEST_PASSWORD }}" >> app/product/.env

      - name: Install dependencies
        run: |
          cd app
          npm ci
          npm ci --prefix auth
          npm ci --prefix product

      - name: ⏱️ Wait for MongoDB and RabbitMQ
        run: |
          ./app/wait-for-it.sh mongodb:27017 --timeout=60 -- echo "MongoDB is ready!"
          ./app/wait-for-it.sh rabbitmq:5672 --timeout=60 -- echo "RabbitMQ is ready!"

      - name: Run tests for auth
        run: |
          cd app/auth
          npm test -- --timeout 30000

      - name: Start Auth Service and wait
        run: |
          cd app/auth
          nohup npm start &>/dev/null &
          cd ..
          ./wait-for-it.sh localhost:3000 --timeout=30 -- echo "Auth Service is up!"

      - name: Create test user
        run: |
          curl -X POST http://localhost:3000/register \
            -H "Content-Type: application/json" \
            -d '{"username": "'${{ secrets.LOGIN_TEST_USER }}'", "password": "'${{ secrets.LOGIN_TEST_PASSWORD }}'"}' \
            || true

      - name: Run tests for product
        run: |
          cd app/product
          npm test -- --timeout 30000
